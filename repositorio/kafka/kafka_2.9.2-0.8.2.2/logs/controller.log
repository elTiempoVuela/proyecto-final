[2016-04-15 02:03:08,410] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children temadeprueba,iotdogs (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-15 02:03:08,475] INFO [TopicChangeListener on Controller 0]: New topics: [Set(temadeprueba)], deleted topics: [Set()], new partition replica assignment [Map([temadeprueba,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-04-15 02:03:08,476] INFO [Controller 0]: New topic creation callback for [temadeprueba,0] (kafka.controller.KafkaController)
[2016-04-15 02:03:08,481] INFO [Controller 0]: New partition creation callback for [temadeprueba,0] (kafka.controller.KafkaController)
[2016-04-15 02:03:08,485] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [temadeprueba,0] (kafka.controller.PartitionStateMachine)
[2016-04-15 02:03:08,525] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=temadeprueba,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-04-15 02:03:08,530] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [temadeprueba,0] (kafka.controller.PartitionStateMachine)
[2016-04-15 02:03:08,530] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [temadeprueba,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2016-04-15 02:03:08,531] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [temadeprueba,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2016-04-15 02:03:08,567] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=temadeprueba,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-04-15 02:03:08,574] WARN [Controller-0-to-broker-0-send-thread], Controller 0 epoch 1 fails to send request Name:LeaderAndIsrRequest;Version:0;Controller:0;ControllerEpoch:1;CorrelationId:11;ClientId:id_0-host_null-port_9092;Leaders:id:0,host:be08df461b28,port:9092;PartitionState:(temadeprueba,0) -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) to broker id:0,host:be08df461b28,port:9092. Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.EOFException: Received -1 when reading from channel, socket has likely been closed.
	at kafka.utils.Utils$.read(Utils.scala:381)
	at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
	at kafka.network.Receive$class.readCompletely(Transmission.scala:56)
	at kafka.network.BoundedByteBufferReceive.readCompletely(BoundedByteBufferReceive.scala:29)
	at kafka.network.BlockingChannel.receive(BlockingChannel.scala:111)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:133)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:60)
[2016-04-15 02:03:08,629] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to id:0,host:be08df461b28,port:9092 for sending state change requests (kafka.controller.RequestSendThread)
[2016-04-15 02:04:07,990] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-15 02:04:07,993] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([temadeprueba,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-15 02:04:07,994] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-15 02:04:07,994] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-15 02:09:07,990] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-15 02:09:07,991] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([temadeprueba,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-15 02:09:07,993] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-15 02:09:07,993] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-15 02:14:07,990] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-15 02:14:07,991] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([temadeprueba,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-15 02:14:07,992] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-15 02:14:07,992] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-15 02:19:07,990] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-15 02:19:07,991] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([temadeprueba,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-15 02:19:07,991] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-15 02:19:07,992] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-15 02:24:07,991] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-15 02:24:07,992] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([temadeprueba,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-15 02:24:07,993] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-15 02:24:07,993] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-15 02:29:07,991] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-15 02:29:07,991] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([temadeprueba,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-15 02:29:07,992] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-15 02:29:07,992] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-15 02:34:07,990] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-15 02:34:07,991] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([temadeprueba,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-15 02:34:07,991] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-15 02:34:07,992] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-15 02:39:07,990] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-15 02:39:07,991] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([temadeprueba,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-15 02:39:07,991] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-15 02:39:07,992] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-04-15 02:44:07,991] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-04-15 02:44:07,992] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([temadeprueba,0] -> List(0), [iotdogs,0] -> List(0))) (kafka.controller.KafkaController)
[2016-04-15 02:44:07,992] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-04-15 02:44:07,992] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
